Step 8:
Add a head to a list and close the predicate

#####

{ len == 1 + len1  /\  0 <= len1 ;
   [x, 2] ** x :-> v ** (x + 1) :-> nxt ** lseg(nxt, 0, len1) **
   r :-> t3 **
   lseg(t3, 0, len1) }

void list_copy(loc r, int v, loc t3)

{true; r :-> Y ** lseg(Y, 0, len) **
       lseg(x, 0, len) }

#####

void list_copy (loc r, int v, loc t3) {
  let Y = malloc(2);
  *r = Y;
  *(Y + 1) = t3;
}