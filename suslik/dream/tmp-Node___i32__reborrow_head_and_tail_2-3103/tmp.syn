# -c 10 -o 10 -p false
###
predicate PRIM_Pi32_COPY(int snap) "i32" {
| true => {
  (snap >= (- 2147483645)) &&
  (snap <= 2147483645) &&
  #[snap] ;
   emp
 }
}

predicate P444_Box_P10_Node_Pi32__P8224_Global__(int snap, int len_result_f_666, set elems_result_f_666) "std::boxed::Box<Node<i32>>" {
| true => "Box::new" {
  (snap == (0, (snap_f_666, len_result_f_666, elems_result_f_666, snap_fdisc_f_666, snap_f1elem_f_666))) ;
   f_666: P10_Node_Pi32_(snap_f_666, len_result_f_666, elems_result_f_666, snap_fdisc_f_666, snap_f1elem_f_666)
 }
}

predicate P4_Tuple_(lft &b, lft &c, int snap, int snap_f0_0_f, set elems_result_f0_1_f, int len_result_f0_1_f) "Tuple<'b, 'c>" {
| true => "Tuple" {
  (len_result_f0_1_f == ^ (int f0_1)[1]) &&
  (snap_f0_0_f == ^ (int f0_0)[0]) &&
  (elems_result_f0_1_f == ^ (set f0_1)[2]) &&
  (snap == (0, ((snap_f0_0), (^ (int f0_0)[0])), ((snap_f0_1, len_result_f0_1, elems_result_f0_1, snap_fdisc_f0_1, snap_f1elem_f0_1), (^ (int f0_1)[0], ^ (int f0_1)[1], ^ (set f0_1)[2], ^ (int f0_1)[3], ^ (int f0_1)[4])))) ;
   f0_0: &b mut Pi32(snap_f0_0) **
   f0_1: &c mut P10_Node_Pi32_(snap_f0_1, len_result_f0_1, elems_result_f0_1, snap_fdisc_f0_1, snap_f1elem_f0_1)
 }
}

predicate PRIM_Pisize_COPY(int snap) "isize" {
| true => {
  (snap >= (- 2147483646)) &&
  (snap <= 2147483646) &&
  #[snap] ;
   emp
 }
}

predicate P10_Node_Pi32_(int snap, int len_result, set elems_result, int snap_fdisc, int snap_f1elem) "Node<i32>" {
| (snap_fdisc == 0) => "Node::Nil" {
  (len_result == ((snap_fdisc == 0) ? 0 : (1 + len_result_f_666_f1next))) &&
  (elems_result == ((snap_fdisc == 0) ? {} : (elems_result_f_666_f1next + {snap_f1elem}))) &&
  (snap == (0, (snap_fdisc))) ;
   priv fdisc: Pisize(snap_fdisc)
 }
| (snap_fdisc == 1) => "Node::Cons" {
  (len_result == ((snap_fdisc == 0) ? 0 : (1 + len_result_f_666_f1next))) &&
  (elems_result == ((snap_fdisc == 0) ? {} : (elems_result_f_666_f1next + {snap_f1elem}))) &&
  (snap == (1, (snap_fdisc), (snap_f1elem), (snap_f1next, len_result_f_666_f1next, elems_result_f_666_f1next))) ;
   priv fdisc: Pisize(snap_fdisc) **
   f1elem: Pi32(snap_f1elem) **
   f1next: P444_Box_P10_Node_Pi32__P8224_Global__(snap_f1next, len_result_f_666_f1next, elems_result_f_666_f1next)
 }
}

{
  &c <= &a && &b <= &a &&
  (len_result_fi >= 2) ;
   fi: &a mut &_ mut P10_Node_Pi32_(snap_fi, len_result_fi, elems_result_fi, snap_fdisc_fi, snap_f1elem_fi)
}
Node___i32__reborrow_head_and_tail_2 "reborrow_head_and_tail_2"
{
  (* ^ (set fi)[2] == ((snap_fdisc_fi == 1) ? ({snap_f1elem_fi, snap_f0_0_f_fresult} + elems_result_f0_1_f_fresult) : {})) &&
  (* ^ (int fi)[1] == (2 + len_result_f0_1_f_fresult)) ;
   fresult: P4_Tuple_(&b, &c, snap_fresult, snap_f0_0_f_fresult, elems_result_f0_1_f_fresult, len_result_f0_1_f_fresult)
}

